# CRC Molecular Subtype Classification - Randi Cluster Configuration
# University of Chicago CRI - Randi Cluster

# Data Configuration
data:
  # Root directory for all data (update with your username)
  root_dir: "/scratch/username/crc_molecular_training/data"
  
  # EPOC WSI data paths
  raw_data_dir: "/scratch/username/crc_molecular_training/data/raw"
  processed_data_dir: "/scratch/username/crc_molecular_training/data/processed"
  manifest_file: "/scratch/username/crc_molecular_training/data/manifests/epoc_manifest.csv"
  
  # Output directories
  output_dir: "/scratch/username/crc_molecular_training/results"
  checkpoint_dir: "/scratch/username/crc_molecular_training/models/checkpoints"
  log_dir: "/scratch/username/crc_molecular_training/logs"

# Model Configuration
model:
  # Architecture type
  architecture: "enhanced_molecular_predictor"
  
  # Model parameters
  num_classes: 3  # Canonical, Immune, Stromal
  input_size: 256
  dropout_rate: 0.2
  
  # Ensemble configuration
  use_ensemble: true
  ensemble_models:
    - "swin_transformer"
    - "convnext"
    - "efficientnet"

# Training Configuration
training:
  # Basic parameters
  batch_size: 32           # Per GPU batch size
  num_epochs: 100
  learning_rate: 1e-4
  weight_decay: 1e-5
  
  # Optimization
  optimizer: "adamw"
  scheduler: "cosine"
  warmup_epochs: 10
  
  # Data loading
  num_workers: 8           # Per GPU workers
  pin_memory: true
  persistent_workers: true
  
  # Augmentation
  use_augmentation: true
  augmentation_strength: 0.5
  
  # Validation
  validation_split: 0.2
  validation_frequency: 5  # Epochs between validation

# Hardware Configuration (Randi Cluster)
hardware:
  # GPU configuration
  num_gpus: 8              # Total GPUs to use
  gpu_type: "a100"         # A100 40GB or 80GB
  
  # Node configuration
  nodes: 1                 # Number of nodes
  cpus_per_task: 32        # CPU cores per node
  memory_per_node: "512G"  # Memory allocation
  
  # Distributed training
  distributed: true
  backend: "nccl"          # NCCL for InfiniBand
  
  # Mixed precision
  use_amp: true            # Automatic Mixed Precision
  amp_level: "O1"

# Monitoring Configuration
monitoring:
  # Checkpointing
  save_frequency: 5        # Save every N epochs
  keep_last_n: 5          # Keep last N checkpoints
  
  # Logging
  log_frequency: 100       # Log every N steps
  tensorboard: true
  wandb: false             # Set to true if using Weights & Biases
  
  # Early stopping
  early_stopping: true
  patience: 15             # Epochs without improvement
  min_delta: 0.001         # Minimum improvement threshold

# Performance Configuration
performance:
  # Memory optimization
  gradient_checkpointing: false  # Enable if memory constrained
  max_memory_usage: 0.9          # Maximum GPU memory usage
  
  # Speed optimization
  compile_model: true            # PyTorch 2.0 compilation
  channels_last: true            # Memory format optimization
  
  # Data pipeline
  prefetch_factor: 2
  multiprocessing_context: "spawn"

# Paths (Randi-specific)
paths:
  # Scratch space (high-performance storage)
  scratch_dir: "/scratch/username/crc_molecular_training"
  
  # Temporary directory
  temp_dir: "/tmp/crc_training_${SLURM_JOB_ID}"
  
  # Module paths
  python_path: "/scratch/username/crc_molecular_training"

# SLURM Integration
slurm:
  # Job configuration
  partition: "gpu"
  account: "pi-username"     # Update with your PI account
  time_limit: "48:00:00"     # 48 hours
  
  # Resource requests
  gres: "gpu:8"
  constraint: "a100"         # Request A100 GPUs specifically
  
  # Notifications
  mail_type: "BEGIN,END,FAIL"
  mail_user: "username@uchicago.edu"

# Environment Configuration
environment:
  # Required modules
  modules:
    - "cuda/11.8"
    - "python/3.11"
    - "gcc/11.2.0"
    - "openmpi/4.1.4"
  
  # Environment variables
  env_vars:
    CUDA_VISIBLE_DEVICES: "0,1,2,3,4,5,6,7"
    OMP_NUM_THREADS: "4"
    NCCL_DEBUG: "INFO"
    PYTORCH_CUDA_ALLOC_CONF: "max_split_size_mb:512"

# Validation Configuration
validation:
  # Metrics to compute
  metrics:
    - "accuracy"
    - "precision"
    - "recall"
    - "f1_score"
    - "auc"
  
  # Test-time augmentation
  tta_enabled: true
  tta_steps: 8
  
  # Uncertainty quantification
  uncertainty_enabled: true
  mc_dropout_samples: 100

# Clinical Configuration
clinical:
  # Molecular subtypes
  class_names:
    - "Canonical"
    - "Immune" 
    - "Stromal"
  
  # Class weights (if imbalanced)
  use_class_weights: true
  
  # Clinical metrics
  survival_analysis: false  # Enable if survival data available
  
# Debug Configuration
debug:
  # Debug mode
  enabled: false
  
  # Profiling
  profile_memory: false
  profile_compute: false
  
  # Reduced dataset for testing
  use_subset: false
  subset_size: 1000 